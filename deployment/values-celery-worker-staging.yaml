# Default values for deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
app:
  version: latest
  port: 80
  protocol: TCP

replicaCount: 1

image:
  repository: registry.tojettest.ir/backend/tojet_backend
  pullPolicy: IfNotPresent
  command: '["celery", "-A", "tojet", "worker", "--loglevel=info"]'
  args: ""

env:
  fromConfigmap:
    enabled: true
    data:
      DATABASE_HOST: tojet-postgres-postgresql
      DATABASE_PORT: 5432
      DATABASE_USER: tojet
      DATABASE_PASSWORD: 43163836813d2d3806154135b5de793e
      DATABASE_NAME: tojet
      REDIS_HOST: tojet-redis-master
      CELERY_BROKER_URL: redis://tojet-redis-master:6379/0
  fromSecret:
    enabled: false
    data: {}

restartPolicy: Always
existingSecret: mysecret

imagePullSecrets:
  - name: regcred
nameOverride: "tojet-celery-worker"
fullnameOverride: ""

serviceMonitor:
  enabled: false
  namespace: kube-monit
  interval: 10s
  path: /api/metrics
  scrapeTimeout: 10s
  selector:
    prometheus: kube-prometheus
    release: prometheus

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80


strategy:
  {}
  # type: RollingUpdate
  # rollingUpdate:
  #   maxUnavailable: 1
  #   maxSurge: 1

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


readinessProbe:
  enabled: false
  path: "/actuator/health/readiness"
  initialDelaySeconds: 10
  periodSeconds: 20
  failureThreshold: 3
  timeoutSeconds: 5

livenessProbe:
  enabled: false
  path: "/actuator/health/liveness"
  initialDelaySeconds: 10
  periodSeconds: 30
  failureThreshold: 3
  timeoutSeconds: 5

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
